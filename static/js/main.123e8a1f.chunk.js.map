{"version":3,"sources":["Entity/actions.ts","Entity/entityReducer.ts","Student/useStudent.tsx","Entity/EntityService.ts","Entity/EntityActions.ts","Entity/EntityRow.tsx","AppData/useApp.tsx","StudentExtended/actions.ts","Common/useHover.tsx","Entity/EntityList.tsx","Student/components/MyForm.tsx","Student/components/StudentForm.tsx","Student/StudentPage.tsx","StudentExtended/studentReducer.ts","StudentExtended/useStudent.tsx","StudentExtended/components/MyForm.tsx","Common/Select.tsx","StudentExtended/components/StudentGrades.tsx","StudentExtended/components/StudentForm.tsx","StudentExtended/StudentPage.tsx","App.tsx","index.tsx"],"names":["EntityActionTypes","StudentContext","entityActions","entityReducer","initialEntity","state","action","type","GET_ENTITIES","payload","entities","pageCount","SET_LOADING","loading","ADD","formMode","entity","id","DISPLAY","EDIT","CLOSE_FORM","undefined","REMOVE","filter","e","STORE","map","ent","CANCEL","GO_TO_PAGE","currentPage","page","EntityService","storageName","getFromJSON","entitiesAll","isWebStorageSupported","this","window","s","localStorage","getItem","JSON","parse","query","pageSize","offset","pageEntities","slice","Math","ceil","length","Promise","resolve","reject","setTimeout","find","setItem","stringify","max","EntityActions","obj","API","entityService","axios","create","baseURL","timeout","headers","dispatch","getPageEntites","response","data","results","FAIL","error","getEntity","removeEntity","storeEntity","initialStudent","name","url","code","email","avatar","types","initialState","canEdit","something","StudentProvider","children","useReducer","createContext","Provider","value","useStudent","context","useContext","Error","jsonStudents","getEntites","useCallback","displayEntity","editEntity","AppContext","StudentActionTypes","EntityRow","props","renderColumns","display","edit","remove","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","current","addEventListener","removeEventListener","useHover","hoverRef","className","ref","key","href","onClick","preventDefault","title","icon","faEdit","color","faWindowClose","EntityList","style","border","previousLabel","nextLabel","breakLabel","onPageChange","selectedItem","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","marginPagesDisplayed","pageRangeDisplayed","MyForm","formik","useFormik","enableReinitialize","initialValues","fromMode","validationSchema","Yup","required","onSubmit","values","saveForm","handleSubmit","htmlFor","onChange","handleChange","onBlur","handleBlur","disabled","width","touched","errors","cancel","StudentForm","borderRadius","padding","marginTop","float","size","student","Page","console","log","minWidth","join","src","height","alt","StudentPage","gradesAll","AppProvider","jsonGrades","grade","words","split","addGrades","useApp","studentReducer","grades","Reducer","STUDENT_ASSIGN_GRADE","studentGradeIds","studentId","gradeId","gradeName","students","STUDENT_REMOVE_GRADE","prevState","Select","selectedIndex","currentTarget","selectedOption","options","option","label","StudentGrades","already","g","Object","includes","unshift","sg","studentJoinGrades","fontSize","StudentPageExtended","App","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.123e8a1f.chunk.js","sourcesContent":["import { IEntity } from \"./types\";\r\n\r\nexport enum EntityActionTypes {\r\n\tGET_ENTITIES = 'GET_ENTITIES',\r\n\tSET_LOADING = 'SET_LOADING',\r\n\tFAIL = 'FAIL',\r\n\tADD = 'ADD',\r\n\tDISPLAY = 'DISPLAY',\r\n\tCLOSE_FORM = 'CLOSE_FORM',\r\n\tEDIT = 'EDIT',\r\n\tREMOVE = 'REMOVE',\r\n  \tSTORE = 'STORE',\r\n\tCANCEL = 'CANCEL',\r\n\tGO_TO_PAGE = 'GO_TO_PAGE'\r\n}\r\n\r\n\r\nexport interface IEntitySetLoading { \r\n\ttype: EntityActionTypes.SET_LOADING, \r\n\tloading: boolean\r\n}\r\n\r\nexport interface IEntityGetEntities {\r\n\ttype: EntityActionTypes.GET_ENTITIES;\r\n\tpayload: {\r\n\t\tentities: IEntity[]; \r\n\t\tpageCount: number;\r\n\t}\r\n}\r\n\r\nexport interface IEntityAdd { \r\n\ttype: EntityActionTypes.ADD \r\n}\r\n\r\nexport interface IEntityDisplay {\r\n\ttype: EntityActionTypes.DISPLAY;\r\n\tentity: IEntity; \r\n}\r\n\r\nexport interface IEntityEdit {\r\n\ttype: EntityActionTypes.EDIT;\r\n\tentity: IEntity; \r\n}\r\n\r\nexport interface IEntityRemove {\r\n\ttype: EntityActionTypes.REMOVE;\r\n\tid: number;\r\n}\r\n\r\nexport interface IEntityCancel { \r\n\ttype: EntityActionTypes.CANCEL \r\n}\r\n\r\nexport interface IEntityCloseForm { \r\n\ttype: EntityActionTypes.CLOSE_FORM \r\n}\r\n\r\nexport interface IEntityStore { \r\n\ttype: EntityActionTypes.STORE,\r\n\tentity: IEntity\r\n}\r\n\r\nexport interface IEntityGoToPage {\r\n\ttype: EntityActionTypes.GO_TO_PAGE;\r\n\tpage: number; \r\n}\r\n\r\nexport interface IEntityFail {\r\n\ttype: EntityActionTypes.FAIL;\r\n\terror: any; \r\n}\r\n\r\n\r\nexport type EntityAcceptedActions = IEntitySetLoading | IEntityGetEntities |\r\n\tIEntityAdd | IEntityFail |\r\n\tIEntityDisplay | IEntityEdit | IEntityRemove |\tIEntityStore | IEntityCancel |\r\n\tIEntityCloseForm | IEntityGoToPage;\r\n","\r\nimport { IEntityState, IEntity } from './types';\r\nimport { EntityActionTypes, EntityAcceptedActions } from './actions';\r\n\r\nexport const entityReducer: <\r\n\tTS extends IEntityState<IEntity>,\r\n\tT extends IEntity\r\n>(initialEntity: T) => React.Reducer<TS, EntityAcceptedActions> = (initialEntity) => {\r\n\treturn (state, action) =>  {\r\n\t\tswitch(action.type) {\r\n\r\n\t\t\tcase EntityActionTypes.GET_ENTITIES: {\r\n\t\t\t\tconst { entities, pageCount } = action.payload;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities,\r\n\t\t\t\t\tpageCount\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcase EntityActionTypes.SET_LOADING:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tloading: action.loading\r\n\t\t\t\t}\r\n\t\r\n\t\t\tcase EntityActionTypes.ADD: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'add',\r\n\t\t\t\t\tentity: { \r\n\t\t\t\t\t\t...initialEntity, \r\n\t\t\t\t\t\tid: -1\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}    \t\r\n\t\r\n\t\t\tcase EntityActionTypes.DISPLAY: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'display',\r\n\t\t\t\t\tentity: { ...action.entity },\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tcase EntityActionTypes.EDIT: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tentity: { ...action.entity }\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcase EntityActionTypes.CLOSE_FORM: \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'none',\r\n\t\t\t\t\tentity: undefined\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\tcase EntityActionTypes.REMOVE: {\r\n\t\t\t\tconst  id = action.id\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'display',\r\n\t\t\t\t\tentity: undefined,\r\n\t\t\t\t\tentities: state.entities.filter(e => e.id !== id)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase EntityActionTypes.STORE: {\r\n\t\t\t\tconst entity = action.entity\r\n\t\t\t\tlet entities: IEntity[]  = state.entities;\r\n\t\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\t\tentities = [...entities, { ...entity }]\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tentities = entities.map(ent => ent.id === entity.id ? { ...entity } : ent)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tentity: entity,\r\n\t\t\t\t\tentities: entities\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\r\n\t\t\tcase EntityActionTypes.CANCEL: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'display',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tcase EntityActionTypes.GO_TO_PAGE: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentPage: action.page\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tdefault:\r\n\t\t\t\t// throw new Error(`Unhandled action type: ${action!.type}`);\r\n\t\t\t\t// when combine reducers \r\n\t\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\n","\r\nimport React, { createContext, useContext, useReducer, Dispatch, useCallback } from 'react';\r\nimport { IStudentState } from './types';\r\nimport { entityReducer } from '../Entity/entityReducer';\r\nimport { IStudent } from './types';\r\nimport { EntityAcceptedActions } from '../Entity/actions';\r\nimport { IEntity } from '../Entity/types';\r\nimport { EntityActions } from '../Entity/EntityActions';\r\nimport jsonStudents from './Students.json'\r\n\r\nexport const initialStudent: IStudent = { \r\n\tid: 0, \r\n\tname: '',\r\n\turl: '',\r\n\tcode: '',\r\n\temail: '',\r\n\tavatar: 'https://img.pokemondb.net/artwork/diglett.jpg',\r\n\ttypes: []\r\n};\r\n\r\n\r\nconst initialState: IStudentState = { \r\n\tentities: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcanEdit: true,\r\n\tpageCount: 0,\r\n\tcurrentPage: 0,\r\n\tsomething: [1, 2, 3]\r\n};\r\n\r\nexport interface IStudentContext {\r\n\tstate: IStudentState;\r\n\tdispatch: Dispatch<EntityAcceptedActions>;\r\n}\r\n\r\nlet StudentContext: React.Context<IStudentContext>;\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport const StudentProvider: React.FC<IProps> = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(entityReducer<IStudentState, IStudent>(initialStudent), initialState)\r\n\r\n\tif (StudentContext === undefined)\r\n  \t\tStudentContext = createContext<IStudentContext>({ state, dispatch })\r\n\r\n  \treturn (\r\n   \t<StudentContext.Provider value={{ state, dispatch }}>\r\n   \t\t{children}\r\n   \t</StudentContext.Provider>\r\n  \t)\r\n}\r\n\r\nconst pageSize = 9;\r\nlet entityActions: EntityActions;\r\n\r\nexport const useStudent = () => {\r\n\tconst context = useContext(StudentContext);\r\n\tif (!context) {\r\n\t\tthrow new Error('useStudent must be used within a StudentProvider')\r\n\t}\r\n\r\n\tconst { state, dispatch } = context;\r\n\r\n\tif (!entityActions) {\r\n\t\tentityActions = new EntityActions({\r\n\t\t\tstorageName: 'Students',\r\n\t\t\tgetFromJSON: () => [...jsonStudents],\r\n\t\t\tpageSize: pageSize,\r\n\t\t\tbaseURL: 'https//abc.com/students/'\r\n\t\t});\r\n\t}\r\n\r\n\tconst getEntites = useCallback(\r\n\t\t(query: string, currentPage: number) => { \r\n\t\t\treturn entityActions.getEntites(dispatch, query, currentPage) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst displayEntity = useCallback(\r\n\t\t(id: number) => { \r\n\t\t\treturn entityActions.displayEntity(dispatch, id) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst editEntity = useCallback(\r\n\t\t(id: number) => { \r\n\t\t\treturn entityActions.editEntity(dispatch, id) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst removeEntity = useCallback(\r\n\t\t(id: number) => { \r\n\t\t\treturn entityActions.removeEntity(dispatch, id) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst storeEntity = useCallback(\r\n\t\t(entity: IEntity) => { \r\n\t\t\treturn entityActions.storeEntity(dispatch, entity, state.formMode) \r\n\t\t}, [dispatch, state.formMode]\r\n\t)\r\n\r\n\treturn { state, dispatch, getEntites, displayEntity, editEntity, removeEntity, storeEntity };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { IEntity } from \"./types\";\r\n \r\ninterface IProps {\r\n\tstorageName: string,\r\n\tgetFromJSON: () => IEntity[],\r\n}\r\n\r\nexport class EntityService {\r\n\r\n\tstorageName: string;\r\n\tentitiesAll: IEntity[];\r\n\tisWebStorageSupported: boolean;\r\n\t\r\n\tconstructor(storageName: string,\tgetFromJSON: () => IEntity[]) {\r\n\t\tthis.storageName = storageName\r\n\t\tthis.isWebStorageSupported = 'localStorage' in window \r\n\r\n\t\tconst s = localStorage.getItem(storageName);\r\n\t\tthis.entitiesAll = s !== null ? JSON.parse(s) : getFromJSON();\r\n\t}\r\n\t\r\n\tasync getPageEntites(query: string, pageSize: number, page: number): Promise<any> {\r\n\t\tconst offset = page * pageSize\r\n\t\tconst pageEntities = this.entitiesAll.slice(offset, offset + pageSize);\r\n\t\tconst pageCount =  Math.ceil(this.entitiesAll.length / pageSize)\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tresolve({\r\n\t\t\t\t\t'status': 200,\r\n\t\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t\t'data' : {\r\n\t\t\t\t\t\t'results': { pageEntities, pageCount }\r\n\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}, 200)\r\n\t\t})\r\n\t}\r\n\r\n\tasync getEntity(id: number): Promise<any> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t resolve({\r\n\t\t\t\t\t'status': 200,\r\n\t\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t\t'data' : {\r\n\t\t\t\t\t  'results': this.entitiesAll.find(e => e.id === id)\r\n\t\t\t\t\t}\r\n\t\t\t\t })\r\n\t\t\t  }, 200)\r\n\t\t})\r\n\t}\r\n\t\r\n\tasync removeEntity(id: number): Promise<any> {\r\n\t\tthis.entitiesAll = this.entitiesAll.filter(e => e.id !== id);\r\n\t\tlocalStorage.setItem(this.storageName, JSON.stringify(this.entitiesAll));\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t resolve({\r\n\t\t\t\t\t'status': 200,\r\n\t\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t\t'data' : {\r\n\t\t\t\t\t  'results': true\r\n\t\t\t\t\t}\r\n\t\t\t\t })\r\n\t\t\t  }, 200)\r\n\t\t})\r\n\t}\r\n\t\r\n\t\r\n\tasync storeEntity(formMode: string, entity: IEntity): Promise<any> {\r\n\t\r\n\t\tif (formMode === 'add') {\r\n\t\t\tentity.id = this.entitiesAll.length === 0 ? 1 : Math.max(...this.entitiesAll.map(e => e.id)) + 1\r\n\t\t\tthis.entitiesAll = [...this.entitiesAll, { ...entity }]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.entitiesAll = this.entitiesAll.map(ent => ent.id === entity.id ? { ...entity } : ent)\r\n\t\t}\r\n\t\tlocalStorage.setItem(this.storageName, JSON.stringify(this.entitiesAll));\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t resolve({\r\n\t\t\t\t\t'status': 200,\r\n\t\t\t\t\t'content-type': 'application/json',\r\n\t\t\t\t\t'data' : {\r\n\t\t\t\t\t  'results': entity\r\n\t\t\t\t\t}\r\n\t\t\t\t })\r\n\t\t\t  }, 200)\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { IEntity } from \"./types\";\r\nimport { Dispatch } from \"react\";\r\nimport { EntityAcceptedActions, EntityActionTypes } from \"./actions\";\r\nimport axios from 'axios';\r\nimport { EntityService } from \"./EntityService\";\r\n\r\ninterface IProps {\r\n\tstorageName: string,\r\n\tgetFromJSON: () => IEntity[],\r\n\tpageSize: number,\r\n\tbaseURL: string\r\n}\r\n\r\nexport class EntityActions {\r\n\tpageSize = 10;\r\n\tAPI: any;\r\n\tentityService: EntityService;\r\n\r\n\tconstructor(obj: IProps) {\r\n\t\tthis.pageSize = obj.pageSize;\r\n\r\n\t\tthis.API = axios.create({\r\n\t\t\tbaseURL: obj.baseURL,\r\n\t\t\ttimeout: 1000,\r\n  \t\t\theaders: {'X-Custom-Header': 'foobar'}\r\n\t\t });\r\n\r\n\t\tthis.entityService = new EntityService(obj.storageName, obj.getFromJSON)\r\n\t}\r\n\r\n\tasync getEntites(dispatch: Dispatch<EntityAcceptedActions>, query: string, currentPage: number) {\r\n\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: true })\r\n\t\ttry {\r\n\t\t\t// const response = await API.get(`page=${this.page}&page_size=${this.pageSize}`);\r\n\t\t\tconst response = await this.entityService.getPageEntites(query, this.pageSize, currentPage)\r\n\t\t\tconst { pageEntities, pageCount } = response.data.results\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EntityActionTypes.GET_ENTITIES,\r\n\t\t\t\tpayload: { \r\n\t\t\t\t\tentities: pageEntities, // .map(ent => ({id: ent.id, name: ent.name, only list row columns})), \r\n\t\t\t\t\tpageCount: pageCount\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: false })\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tdispatch({ type: EntityActionTypes.FAIL, error })\r\n\t\t}\r\n\t}\r\n\r\n\tasync displayEntity(dispatch: Dispatch<EntityAcceptedActions>, id: number) {\r\n\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: true })\r\n\t\ttry {\r\n\t\t\t// const response = await API.get(`${id}`);\r\n\t\t\tconst response = await this.entityService.getEntity(id)\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EntityActionTypes.DISPLAY,\r\n\t\t\t\tentity: response.data.results\r\n\t\t\t})\r\n\t\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: false })\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tdispatch({ type: EntityActionTypes.FAIL, error })\r\n\t\t}\r\n\t}\r\n\r\n\tasync editEntity(dispatch: Dispatch<EntityAcceptedActions>, id: number) {\r\n\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: true })\r\n\t\ttry {\r\n\t\t\t// const response = await API.get(`${id}`);\r\n\t\t\tconst response = await this.entityService.getEntity(id)\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: EntityActionTypes.EDIT,\r\n\t\t\t\tentity: response.data.results\r\n\t\t\t})\r\n\t\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: false })\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tdispatch({ type: EntityActionTypes.FAIL, error })\r\n\t\t}\r\n\t}\r\n\r\n\tasync removeEntity(dispatch: Dispatch<EntityAcceptedActions>, id: number) {\r\n\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: true })\r\n\t\ttry {\r\n\t\t\t// const response = await this.API.delete(`${id}`);\r\n\t\t\tconst response = await this.entityService.removeEntity(id)\r\n\t\t\tdispatch({ type: EntityActionTypes.REMOVE, id })\r\n\t\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: false })\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tdispatch({ type: EntityActionTypes.FAIL, error })\r\n\t\t}\r\n\t}\r\n\r\n\tasync storeEntity(dispatch: Dispatch<EntityAcceptedActions>, entity: IEntity, formMode: string) {\r\n\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: true })\r\n\t\ttry {\r\n\t\t\tif (formMode === 'add') {\r\n\t\t\t\t// const response = this.API.post({ entity })\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// const response = this.API.put({ entity })\r\n\t\t\t}\r\n\t\t\tconst response = await this.entityService.storeEntity(formMode, entity)\r\n\t\t\tdispatch({ type: EntityActionTypes.STORE, entity: response.data.results })\r\n\t\t\tdispatch({ type: EntityActionTypes.SET_LOADING, loading: false })\r\n\t\t}\r\n\t\tcatch(error) {\r\n\t\t\tdispatch({ type: EntityActionTypes.FAIL, error })\r\n\t\t}\r\n\t}\r\n\r\n}","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { useHover } from \"../Common/useHover\";\r\nimport { IEntity } from \"./types\";\r\n\r\ninterface IRowProps<T> {\r\n\tentity: T,\r\n\trenderColumns: (item: T) => JSX.Element[],\r\n\tdisplay: (id: number) => void,\r\n\tedit: (id: number) => void,\r\n\tremove: (id: number) => void,\r\n}\r\n\r\nexport const EntityRow: <T extends IEntity> \r\n\t\t\t\t\t(props: IRowProps<T>) => React.ReactElement<IRowProps<T>> = (props) => {\r\n\tconst { entity, renderColumns, display, edit, remove } = props;\r\n\tconst { id, name } = entity; // , url \r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\treturn (\r\n\t\t<ul className=\"entity-columns\" ref={hoverRef}>\r\n\t\t\t{/* <li>{id}</li> */}\r\n\t\t\t<li key={id}>\r\n\t\t\t\t<a href=\"#/\" onClick={(e) => { e.preventDefault(); display(id)  }}>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\r\n\t\t\t\r\n\r\n\t\t\t<li key=\"buttons\">\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(id)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => { remove(id) }}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t</li>\r\n\r\n\t\t\t{ renderColumns(entity) }\r\n\t\t</ul>\r\n\t)\r\n};\r\n","import React, { createContext, useContext } from 'react';\r\nimport jsonGrades from \"../Grades/Grades.json\"\r\nimport { IAppState } from './types';\r\n\r\nconst initialState: IAppState = { \r\n\tgradesAll: []\r\n};\r\n\r\nexport interface IAppContext {\r\n\tstate: IAppState;\r\n}\r\n\r\nlet AppContext: React.Context<IAppContext>;\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\n\r\nexport const AppProvider: React.FC<IProps> = ({ children }) => {\r\n\tconst state = initialState\r\n\r\n\tconst addGrades = () => {\r\n\t\tconst { gradesAll } = state;\r\n\t\tjsonGrades.map(grade => \r\n\t\t\tgradesAll[grade.id] = { ...grade, words: grade.name.split(',')}\r\n\t\t)\r\n\t}\r\n\t\r\n\tif (AppContext === undefined) {\r\n\t\taddGrades();\r\n\t\tAppContext = createContext<IAppContext>({ state })\r\n\t}\r\n\r\n  \treturn (\r\n   \t<AppContext.Provider value={{ state }}>\r\n   \t\t{children}\r\n   \t</AppContext.Provider>\r\n  \t)\r\n}\r\n\r\nexport const useApp = () => useContext(AppContext);","import { IStudentGradeIds, IStudent } from \"./types\";\r\nimport { IEntity } from \"../Entity/types\";\r\n\r\nexport enum StudentActionTypes {\r\n\tGET_ENTITIES = 'GET_ENTITIES', // override entity\r\n\tSTUDENT_ASSIGN_GRADE = 'STUDENT_ASSIGN_GRADE',\r\n\tSTUDENT_REMOVE_GRADE = 'STUDENT_REMOVE_GRADE'\r\n}\r\n\r\nexport interface IStudentGetEntities {\r\n\ttype: StudentActionTypes.GET_ENTITIES;\r\n\tpayload: {\r\n\t\tentities: IStudent[]; \r\n\t\tpageCount: number;\r\n\t}\r\n}\r\n\r\nexport interface IAssignGrade {\r\n\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE, \r\n\tstudentGradeIds: IStudentGradeIds\r\n}\r\n\r\nexport interface IRemoveGrade {\r\n\ttype: StudentActionTypes.STUDENT_REMOVE_GRADE, \r\n\tstudentGradeIds: IStudentGradeIds\r\n}\r\n\r\n\r\nexport type StudentAcceptedActions = IStudentGetEntities | IAssignGrade | IRemoveGrade\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLUListElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLUListElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport { EntityActionTypes } from \"./actions\";\r\nimport { EntityRow } from \"./EntityRow\";\r\nimport { IEntity } from \"./types\";\r\n\r\n\r\ninterface IProps<T extends IEntity> {\r\n\tentities: T[],\r\n\tdispatch: React.Dispatch<any>,\r\n\tdisplayEntity: (id: number) => void,\r\n\teditEntity: (id: number) => void,\r\n\tremoveEntity: (id: number) => void,\r\n\trenderColumns: (item: T) => JSX.Element[],\r\n\tcurrentPage: number,\r\n\tpageCount: number,\r\n\t// pageRangeDisplayed: number;\r\n\t// marginPagesDisplayed: number;\r\n}\r\n\r\nexport const EntityList: <T extends IEntity>\r\n\t\t\t\t\t(props: IProps<T>) => React.ReactElement<IProps<T>> = (props) => {\r\n\tconst { \r\n\t\tentities, \r\n\t\tdisplayEntity, editEntity, removeEntity,\r\n\t\tdispatch, renderColumns,\r\n\t\tpageCount //, pageRangeDisplayed, marginPagesDisplayed, \r\n\t} = props;\r\n\r\n\treturn (\r\n   \t<div style={{border: '0px solid lightblue'}}>\r\n\t\t\t<ul className=\"entity-list\">\r\n\t\t\t\t{entities.map(entity => (\r\n\t\t\t\t\t<li key={entity.id}>\r\n\t\t\t\t\t\t<EntityRow\r\n\t\t\t\t\t\t\tentity={entity}\r\n\t\t\t\t\t\t\trenderColumns={renderColumns}\r\n\t\t\t\t\t\t\tdisplay={displayEntity}\r\n\t\t\t\t\t\t\tedit={editEntity}\r\n\t\t\t\t\t\t\tremove={removeEntity}\r\n\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<div id=\"react-paginate\">\r\n\t\t\t\t<ReactPaginate\r\n\t\t\t\t\tpreviousLabel={\"← Previous\"}\r\n\t\t\t\t\tnextLabel={\"Next →\"}\r\n\t\t\t\t\tbreakLabel={<span className=\"gap\">...</span>}\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\tonPageChange={(selectedItem: { selected: number }) => \r\n\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\ttype: EntityActionTypes.GO_TO_PAGE,\r\n\t\t\t\t\t\t\tpage: selectedItem.selected\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// forcePage={currentPage}\r\n\t\t\t\t\tcontainerClassName={\"pagination\"}\r\n\t\t\t\t\tpreviousLinkClassName={\"previous_page\"}\r\n\t\t\t\t\tnextLinkClassName={\"next_page\"}\r\n\t\t\t\t\tdisabledClassName={\"disabled\"}\r\n\t\t\t\t\tactiveClassName={\"active\"}\r\n\t\t\t\t\tmarginPagesDisplayed={2}\r\n\t\t\t\t\tpageRangeDisplayed={5}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button onClick={() => dispatch({ type: EntityActionTypes.ADD })}>Add new</button>\t\t\t\r\n\t\t</div>\r\n  )\r\n}","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IStudent } from '../types';\r\n\r\ninterface IFormProps {\r\n\tentity: IStudent;\r\n\tformMode: string;\r\n\tcanEdit: boolean;\r\n\tcancel: () => void;\r\n\tsaveForm: (student: IStudent) => void;\r\n\tedit: () => void;\r\n\tremove: () => void;\t\r\n }\r\n\r\nexport const MyForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n\tenableReinitialize: true,\r\n   initialValues: {\r\n\t\tfromMode: props.formMode,\r\n\t\tcanEdit: props.canEdit,\r\n      id: props.entity.id,\r\n\t\turl: props.entity.url,\r\n\t\tcode: props.entity.code,\r\n\t\tavatar: props.entity.avatar,\r\n\t\tname: props.entity.name,\r\n\t\temail: props.entity.email,\r\n\t\ttypes: props.entity.types,\r\n   },\r\n   validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n   }),\r\n   onSubmit: (values) => {\r\n\t\t// values.name = values.firstName.trim() + ' ' + values.lastName.trim()\r\n\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\tprops.saveForm(values)\r\n   },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n\t\t { props.formMode !== 'add' && \r\n\t\t <>\r\n\t\t\t<label htmlFor=\"id\">Student id</label>\r\n\t\t\t<input\r\n\t\t\tid=\"id\"\r\n\t\t\tname=\"id\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tonChange={formik.handleChange}\r\n\t\t\tonBlur={formik.handleBlur}\r\n\t\t\tvalue={formik.values.id}\r\n\t\t\tdisabled\r\n\t\t\tstyle={{width: '50px'}}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.id && formik.errors.id ? (\r\n\t\t\t<div>{formik.errors.id}</div>\r\n\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t<label htmlFor=\"name\">Name</label>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.name}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.name && formik.errors.name ? (\r\n        <div>{formik.errors.name}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"code\">Code</label>\r\n      <input\r\n        id=\"code\"\r\n        name=\"code\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.code}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.code && formik.errors.code ? (\r\n        <div>{formik.errors.code}</div>\r\n      ) : null}\r\n\r\n\t\t<label htmlFor=\"lastName\">Avatar</label>\r\n      <input\r\n        id=\"avtar\"\r\n        name=\"avtar\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.avatar}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.avatar && formik.errors.avatar ? (\r\n        <div>{formik.errors.avatar}</div>\r\n      ) : null}\t\t\r\n\r\n\t\t<label htmlFor=\"email\">Email</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.email}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null}\t\t\r\n\r\n\r\n\t\t{ props.formMode !== 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n      \t<button type=\"submit\">Save</button>\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t{ props.canEdit && props.formMode === 'display' &&\r\n\t\t\t<>\r\n\t\t\t\t<button onClick={(e) => { e.preventDefault(); props.edit() }}>Edit</button>\r\n\t\t\t\t<button onClick={(e) => { e.preventDefault(); props.remove() }}>Remove</button>\r\n\t\t\t</>\r\n\t\t}\t\t\t\t\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { useStudent } from '../useStudent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { EntityActionTypes} from '../../Entity/actions'\r\nimport { MyForm } from './MyForm';\r\n\r\ninterface IProps {\r\n}\r\n\r\nexport const StudentForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst { state, dispatch, editEntity, removeEntity, storeEntity } = useStudent();\r\n\tconst { entity, formMode, canEdit } = state;\r\n\r\n\tlet title: string = ''\r\n\tswitch (state.formMode) {\r\n\t\tcase 'display':\r\n\t\t\ttitle = 'Student';\r\n\t\t\tbreak;\r\n\t\tcase 'edit':\r\n\t\t\ttitle = 'Edit Student';\r\n\t\t\tbreak;\r\n\t\tcase 'add':\r\n\t\t\ttitle = 'New Student';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t{ entity && \r\n\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '10px'}}>\r\n\t\t\t\t<h4 style={{marginTop: 0}}>{title}</h4>\r\n\t\t\t\t<button \r\n\t\t\t\t\tstyle={{float:'right'}}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Close\"\r\n\t\t\t\t\tonClick={() => { dispatch( {type: EntityActionTypes.CLOSE_FORM} )}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} size=\"2x\" color='lightblue' />\r\n\t\t\t\t</button>\t\t\t\t\r\n\t\t\t\t<MyForm {...props}\r\n\t\t\t\t\tentity={entity!} \r\n\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\tcanEdit={canEdit}\r\n\t\t\t\t\tcancel = {() => dispatch( {type: EntityActionTypes.CANCEL} )}\r\n\t\t\t\t\tsaveForm = {(student) => storeEntity(student) }\r\n\t\t\t\t\tedit = {() => editEntity(entity!.id)}\r\n\t\t\t\t\tremove = {() => removeEntity(entity!.id)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport { StudentProvider, useStudent } from \"./useStudent\";\r\n\r\nimport { EntityList } from \"../Entity/EntityList\";\r\nimport { StudentForm } from \"./components/StudentForm\";\r\n\r\nimport { IStudent } from \"./types\";\r\n\r\ninterface IPageProps {\r\n\tquery: string;\r\n}\r\n\r\nexport const Page: React.FC<IPageProps> = (props: IProps) => {\r\n\tconst { state, dispatch, getEntites, displayEntity, editEntity, removeEntity } = useStudent();\r\n\tconst { entities, currentPage, pageCount } = state;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tgetEntites(props.query, currentPage);\r\n\t\tconsole.log(\"getEntites\", currentPage)\r\n\t}, [getEntites, props.query, currentPage]);\r\n\t\r\n\r\n  \treturn (\r\n\t\t<div className=\"two-columns\">\r\n\t\t\t<div className=\"a\">\r\n\t\t\t\t<h3>Students</h3>\r\n\t\t\t\t<EntityList \r\n\t\t\t\t\tentities={entities}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t\tdisplayEntity={displayEntity}\r\n\t\t\t\t\teditEntity={editEntity}\r\n\t\t\t\t\tremoveEntity={removeEntity}\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\trenderColumns = {(entity: IStudent) => [\r\n\t\t\t\t\t\t<li key=\"types\" style={{minWidth: '60%'}}>{entity.types.join(', ')}</li>,\r\n\t\t\t\t\t\t<li key=\"img\"><img src={entity.avatar} style={{height: '30px'}} alt=\"Slika\"></img></li>\r\n\t\t\t\t\t]}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"b\">\r\n\t\t\t\t<StudentForm />\r\n\t\t\t</div>\r\n\t\t</div>    \t\t\r\n  );\r\n}\r\n\r\n\r\ninterface IProps {\r\n\tquery: string\r\n}\r\n\r\nexport const StudentPage: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <StudentProvider>\r\n\t\t <Page query={props.query} />\r\n    </StudentProvider>\r\n  );\r\n}\r\n\r\n","import { IStudentState, IStudent } from \"./types\";\r\nimport { entityReducer } from \"../Entity/entityReducer\";\r\nimport { StudentActionTypes, StudentAcceptedActions } from \"./actions\";\r\nimport { EntityAcceptedActions } from \"../Entity/actions\";\r\n\r\nexport const initialStudent: IStudent = { \r\n\tid: 0, \r\n\tname: '',\r\n\turl: '',\r\n\tcode: '',\r\n\temail: '',\r\n\tavatar: 'https://img.pokemondb.net/artwork/diglett.jpg',\r\n\ttypes: [],\r\n\tgrades: []\r\n};\r\n\r\nexport const combineReducers: (\r\n\t\tentityReducer: React.Reducer<IStudentState, EntityAcceptedActions>, \r\n\t\tstudentReducer: React.Reducer<IStudentState, StudentAcceptedActions>) => \r\n\t\t\tReact.Reducer<\r\n\t\t\t\tIStudentState, \r\n\t\t\t\tEntityAcceptedActions & StudentAcceptedActions\r\n\t\t\t> = (entityReducer, studentReducer) => {\r\n\treturn (prevState, action) => {\r\n\t\t\r\n\t\t// when action is overriden in studentReducer, no need to call entityReducer\r\n\t\tif (action.type in StudentActionTypes)\r\n\t\t\treturn studentReducer(prevState, action)\r\n\r\n\t\tconst state = entityReducer(prevState, action);\r\n\t\treturn studentReducer(state, action)\r\n\t};\t\r\n}\r\n\r\n\r\nexport const studentReducer: (initialEntity: IStudent) => \r\n\t\t\t\t\tReact.Reducer<IStudentState, StudentAcceptedActions> = (initialEntity) => {\r\n\treturn (state, action) =>  {\r\n\t\tswitch(action.type) {\r\n\r\n\t\t\tcase StudentActionTypes.GET_ENTITIES:  {\r\n\t\t\t\tconst { entities, pageCount } = action.payload;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities,\r\n\t\t\t\t\tpageCount\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcase StudentActionTypes.STUDENT_ASSIGN_GRADE: {\r\n\t\t\t\tconst { studentId, gradeId, gradeName } = action.studentGradeIds\r\n\t\t\t\tconst students = state.entities.map(student => \r\n\t\t\t\t\tstudent.id !== studentId ?\r\n\t\t\t\t\t\t{...student} :\r\n\t\t\t\t\t\t{...student, grades: [...student.grades, { \r\n\t\t\t\t\t\t\t\tname: gradeName,\r\n\t\t\t\t\t\t\t\tgradeId,\r\n\t\t\t\t\t\t\t\tgrade: 0\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities: students,\r\n\t\t\t\t\tentity: { ...students.find(student => student.id === studentId)! }\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcase StudentActionTypes.STUDENT_REMOVE_GRADE: {\r\n\t\t\t\tconst { studentId, gradeId } = action.studentGradeIds\r\n\t\t\t\tconst students = state.entities.map(student => \r\n\t\t\t\t\tstudent.id !== studentId ?\r\n\t\t\t\t\t\t{...student} :\r\n\t\t\t\t\t\t{...student, grades: student.grades.filter(grade=>grade.gradeId !== gradeId)}\r\n\t\t\t\t)\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities: students,\r\n\t\t\t\t\tentity: { ...students.find(student => student.id === studentId)! }\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t//\tthrow new Error(`Unhandled action type: ${action!.type}`);\r\n\t\t\t\t// when combine reducers \r\n\t\t\t\treturn state\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\nexport const Reducer = combineReducers(entityReducer(initialStudent), studentReducer(initialStudent));\r\n","\r\nimport React, { createContext, useContext, useReducer, Dispatch, useCallback } from 'react';\r\nimport { IStudentState, IStudent } from './types';\r\nimport { initialStudent, Reducer } from './studentReducer';\r\nimport { EntityActions } from '../Entity/EntityActions';\r\nimport { IEntity } from '../Entity/types';\r\nimport { entityReducer } from '../Entity/entityReducer';\r\nimport jsonStudents from './Students.json'\r\n\r\n\r\nconst initialState: IStudentState = { \r\n\tentities: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcanEdit: true,\r\n\tpageCount: 0,\r\n\tcurrentPage: 0,\r\n\tgradesAll: []\r\n};\r\n\r\nexport interface IStudentContext {\r\n\tstate: IStudentState;\r\n\tdispatch: Dispatch<any>; // AcceptedActions & StudentAcceptedActions>;\r\n}\r\n\r\nlet StudentContext: React.Context<IStudentContext>;\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport const StudentProvider: React.FC<IProps> = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(Reducer, initialState)\r\n\r\n\tif (StudentContext === undefined)\r\n  \t\tStudentContext = createContext<IStudentContext>({ state, dispatch })\r\n\r\n  \treturn (\r\n   \t<StudentContext.Provider value={{ state, dispatch }}>\r\n   \t\t{children}\r\n   \t</StudentContext.Provider>\r\n  \t)\r\n}\r\n\r\nconst pageSize = 9;\r\nlet entityActions: EntityActions;\r\n\r\nexport const useStudent = () => {\r\n\tconst context = useContext(StudentContext);\r\n\tif (!context) {\r\n\t\tthrow new Error('useStudent must be used within a StudentProvider')\r\n\t}\r\n\r\n\tconst { state, dispatch } = context;\r\n\r\n\tif (!entityActions) {\r\n\t\tentityActions = new EntityActions({\r\n\t\t\tstorageName: 'StudentGrades',\r\n\t\t\tgetFromJSON: () => [...jsonStudents],\r\n\t\t\tpageSize: pageSize,\r\n\t\t\tbaseURL: 'https//abc.com/students/'\r\n\t\t});\r\n\t}\r\n\r\n\tconst getEntites = useCallback(\r\n\t\t(query: string, currentPage: number) => { \r\n\t\t\treturn entityActions.getEntites(dispatch, query, currentPage) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst displayEntity = useCallback(\r\n\t\t(id: number) => { \r\n\t\t\treturn entityActions.displayEntity(dispatch, id) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst editEntity = useCallback(\r\n\t\t(id: number) => { \r\n\t\t\treturn entityActions.editEntity(dispatch, id) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst removeEntity = useCallback(\r\n\t\t(id: number) => { \r\n\t\t\treturn entityActions.removeEntity(dispatch, id) \r\n\t\t}, [dispatch]\r\n\t)\r\n\r\n\tconst storeEntity = useCallback(\r\n\t\t(entity: IEntity) => { \r\n\t\t\treturn entityActions.storeEntity(dispatch, entity, state.formMode) \r\n\t\t}, [dispatch, state.formMode]\r\n\t)\r\n\r\n\treturn { state, dispatch, getEntites, displayEntity, editEntity, removeEntity, storeEntity };\r\n}\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IStudent } from '../types';\r\n\r\ninterface IFormProps {\r\n\tentity: IStudent;\r\n\tformMode: string;\r\n\tcanEdit: boolean;\r\n\tcancel: () => void;\r\n\tsaveForm: (student: IStudent) => void;\r\n\tedit: () => void;\r\n\tremove: () => void;\t\r\n }\r\n\r\nexport const MyForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n\tenableReinitialize: true,\r\n   initialValues: {\r\n\t\tfromMode: props.formMode,\r\n\t\tcanEdit: props.canEdit,\r\n      id: props.entity.id,\r\n\t\turl: props.entity.url,\r\n\t\tcode: props.entity.code,\r\n\t\tavatar: props.entity.avatar,\r\n\t\tname: props.entity.name,\r\n\t\temail: props.entity.email,\r\n\t\ttypes: props.entity.types,\r\n\t\tgrades: props.entity.grades\r\n   },\r\n   validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n   }),\r\n   onSubmit: (values) => {\r\n\t\t// values.name = values.firstName.trim() + ' ' + values.lastName.trim()\r\n\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\tprops.saveForm(values)\r\n   },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n\t\t { props.formMode !== 'add' && \r\n\t\t <>\r\n\t\t\t<label htmlFor=\"id\">Student id</label>\r\n\t\t\t<input\r\n\t\t\tid=\"id\"\r\n\t\t\tname=\"id\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tonChange={formik.handleChange}\r\n\t\t\tonBlur={formik.handleBlur}\r\n\t\t\tvalue={formik.values.id}\r\n\t\t\tdisabled\r\n\t\t\tstyle={{width: '50px'}}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.id && formik.errors.id ? (\r\n\t\t\t<div>{formik.errors.id}</div>\r\n\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t<label htmlFor=\"name\">Name</label>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.name}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.name && formik.errors.name ? (\r\n        <div>{formik.errors.name}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"code\">Code</label>\r\n      <input\r\n        id=\"code\"\r\n        name=\"code\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.code}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.code && formik.errors.code ? (\r\n        <div>{formik.errors.code}</div>\r\n      ) : null}\r\n\r\n\t\t<label htmlFor=\"lastName\">Avatar</label>\r\n      <input\r\n        id=\"avtar\"\r\n        name=\"avtar\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.avatar}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.avatar && formik.errors.avatar ? (\r\n        <div>{formik.errors.avatar}</div>\r\n      ) : null}\t\t\r\n\r\n\t\t<label htmlFor=\"email\">Email</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.email}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null}\t\t\r\n\r\n\r\n\t\t{ props.formMode !== 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n      \t<button type=\"submit\">Save</button>\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t{ props.canEdit && props.formMode === 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.edit()}>Edit</button>\r\n\t\t\t<button onClick={() => props.remove()}>Remove</button>\r\n\t\t\t</>\r\n\t\t}\t\t\t\t\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\n \r\ntype OptionValue = string | number;\r\n\r\nexport type Option<T extends OptionValue> = {\r\n  value: T;\r\n  label: string;\r\n};\r\n\r\ntype Props<T extends OptionValue> = {\r\n  options: Option<T>[];\r\n  value: T;\r\n  onChange: (value: T) => void;\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n  function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    const { selectedIndex } = e.currentTarget;\r\n    const selectedOption = props.options[selectedIndex];\r\n    props.onChange(selectedOption.value);\r\n  }\r\n  return (\r\n    <select value={props.value} onChange={handleOnChange}>\r\n      {props.options.map(option => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { useStudent } from '../useStudent';\r\nimport { Select } from '../../Common/Select';\r\nimport { IGrade } from '../../Grades/types';\r\n\r\nimport { Option } from '../../Common/Select'\r\nimport { useApp } from '../../AppData/useApp';\r\nimport { StudentActionTypes } from '../actions';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst StudentGrades: React.FC<IProps> = (props: IProps) => {\r\n\tconst { state: appState } = useApp();\r\n\tconst { gradesAll } = appState;\r\n\r\n\tconst { state, dispatch } = useStudent();\r\n\tconst { entity: student, formMode, canEdit } = state;\r\n\tconst { grades } = student!;\r\n\r\n\tlet options: Option<number>[] = [];\r\n\r\n\tif (canEdit) {\r\n\t\tconst already = student!.grades.map(g => g.gradeId);\r\n\t\tconst gradesUnassigned: IGrade[] = Object.values(gradesAll).filter(grade => !already.includes(grade.id))\r\n\t\toptions= gradesUnassigned.map(grade => ({value: grade.id, label: grade.name}))\r\n\t\toptions.unshift({value: 0, label: 'select'})\r\n\t}\r\n\r\n   return (\r\n      <div className=\"name-container\">\r\n\t\t\t{ grades.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo grades yet\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t<>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t<th>Grade</th>\r\n\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' && <th></th> }\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ grades.length > 0 && grades.map(grade => \r\n\t\t\t\t\t\t\t<tr key={grade.gradeId}>\r\n\t\t\t\t\t\t\t\t<td className=\"name\">\r\n\t\t\t\t\t\t\t\t\t{grade.name}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td className=\"name\">\r\n\t\t\t\t\t\t\t\t\t{grade.gradeId}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Grade\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: StudentActionTypes.STUDENT_REMOVE_GRADE, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstudentGradeIds: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstudentId: student!.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgradeId: grade.gradeId\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{canEdit && formMode !== 'display' && \r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\t\t\tvalue={0}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(gradeId: number) => \r\n\t\t\t\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype: StudentActionTypes.STUDENT_ASSIGN_GRADE, \r\n\t\t\t\t\t\t\t\t\t\t\t\tstudentGradeIds: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstudentId: student!.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgradeId: gradeId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgradeName: gradesAll[gradeId].name\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      </div>\r\n   );\r\n  }\r\n\r\nexport default StudentGrades\r\n\r\n","import React from 'react';\r\nimport { useStudent } from '../useStudent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { MyForm } from './MyForm';\r\nimport StudentGrades from './StudentGrades';\r\nimport { EntityActionTypes } from '../../Entity/actions';\r\n\r\ninterface IProps {\r\n}\r\n\r\nexport const StudentForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst { state, dispatch, editEntity, removeEntity, storeEntity } = useStudent();\r\n\tconst { entity, formMode, canEdit } = state;\r\n\r\n\tlet title: string = ''\r\n\tswitch (state.formMode) {\r\n\t\tcase 'display':\r\n\t\t\ttitle = 'Student';\r\n\t\t\tbreak;\r\n\t\tcase 'edit':\r\n\t\t\ttitle = 'Edit Student';\r\n\t\t\tbreak;\r\n\t\tcase 'add':\r\n\t\t\ttitle = 'New Student';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t{ entity && \r\n\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '10px'}}>\r\n\t\t\t\t<h4 style={{marginTop: 0}}>{title}</h4>\r\n\t\t\t\t<button \r\n\t\t\t\t\tstyle={{float:'right'}}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Close\"\r\n\t\t\t\t\tonClick={() => { dispatch( {type: EntityActionTypes.CLOSE_FORM} )}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} size=\"2x\" color='lightblue' />\r\n\t\t\t\t</button>\t\t\t\t\r\n\t\t\t\t<MyForm {...props}\r\n\t\t\t\t\tentity={entity!} \r\n\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\tcanEdit={canEdit}\r\n\t\t\t\t\tcancel = {() => dispatch( {type: EntityActionTypes.CANCEL} )}\r\n\t\t\t\t\tsaveForm = {(student) => storeEntity(student) }\r\n\t\t\t\t\tedit = {() => editEntity(entity!.id)}\r\n\t\t\t\t\tremove = {() => removeEntity(entity!.id)}\r\n\t\t\t\t/>\r\n\t\t\t\t<StudentGrades\t/>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport { useApp } from '../AppData/useApp'\r\n\r\nimport { useStudent, StudentProvider } from \"./useStudent\";\r\n\r\nimport { EntityList } from \"../Entity/EntityList\";\r\nimport { StudentForm } from \"./components/StudentForm\";\r\n\r\nimport { IStudent, IStudentGrade } from \"./types\";\r\nimport { IGrade } from \"../Grades/types\";\r\n\r\ninterface IPageProps {\r\n\tquery: string;\r\n}\r\n\r\nconst studentJoinGrades = (student: IStudent, gradesAll: Record<number, IGrade>) : IStudentGrade[]=> {\r\n\tif (student === undefined || student.grades.length === 0)\r\n\t\treturn [];\r\n\treturn student.grades.map(sg => ({ ...sg, name: gradesAll[sg.gradeId].name }))\r\n}\r\n\r\nexport const Page: React.FC<IPageProps> = (props: IProps) => {\r\n\tconst { state: appState } = useApp();\r\n\tconst { gradesAll } = appState;\r\n\r\n\tconst { state, dispatch, getEntites, displayEntity, editEntity, removeEntity } = useStudent();\r\n\tconst { entities, currentPage, pageCount } = state;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tgetEntites(props.query, currentPage);\r\n\t\tconsole.log(\"getEntites\", currentPage)\r\n\t\t// per page\r\n\t\tentities.map(student => student.grades = studentJoinGrades(student, gradesAll));\r\n\t}, [getEntites, props.query, currentPage, entities, gradesAll]);\r\n\r\n  \treturn (\r\n\t\t<div className=\"two-columns\">\r\n\t\t\t<div className=\"a\">\r\n\t\t\t\t<h3>Students</h3>\r\n\t\t\t\t<EntityList \r\n\t\t\t\t\tentities={entities}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t\tdisplayEntity={displayEntity}\r\n\t\t\t\t\teditEntity={editEntity}\r\n\t\t\t\t\tremoveEntity={removeEntity}\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\trenderColumns = {(entity: IStudent) => [\r\n\t\t\t\t\t\t<li key=\"types\" style={{minWidth: '60%'}}>{entity.types.join(', ')}</li>,\r\n\t\t\t\t\t\t<li key=\"img\"><img src={entity.avatar} style={{height: '30px'}} alt=\"Slika\"></img></li>,\r\n\t\t\t\t\t\t<li key=\"grades\" style={{fontSize: 'small'}}>\r\n\t\t\t\t\t\t\t{entity.grades.length > 0 &&\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\tGrades:&nbsp;\r\n\t\t\t\t\t\t\t\t\t{entity.grades.map(g => `${g.name}:${g.grade}`).join(', ')}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</li>,\r\n\t\t\t\t\t]}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"b\">\r\n\t\t\t\t<StudentForm />\r\n\t\t\t</div>\r\n\t\t</div>    \t\t\r\n  );\r\n}\r\n\r\n\r\ninterface IProps {\r\n\tquery: string\r\n}\r\n\r\nexport const StudentPageExtended: React.FC<IProps> = (props: IProps) => {\r\n\treturn (\r\n\t\t<StudentProvider>\r\n\t\t\t<Page query={props.query} />\r\n\t\t</StudentProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Link  } from 'react-router-dom'\nimport { StudentPage } from './Student/StudentPage';\nimport { StudentPageExtended } from './StudentExtended/StudentPage';\nimport { AppProvider } from './AppData/useApp';\n\nconst App: React.FC = () => {\n  return (\n\t\t<AppProvider> {/* State shared between different components (features or pages),\t\n\t\t\t\t\t\t\t\tdeeply nested in different branches of DOM tree. */}\n\t\t\t<Router>\n\t\t\t\t<nav>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/student\">Student</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/\" className=\"push-right\">Student Extended</Link>  {/* student-extended */}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\t\t\t\t\n\t\t\t\t</nav>\n\t\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/student\">\n\t\t\t\t\t\t\t<StudentPage query=\"all\" />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<StudentPageExtended query=\"all\" />\n\t\t\t\t\t\t</Route>\t\t\t\t\t\t\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\t\n\t\t\t</Router>\n\t\t</AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}