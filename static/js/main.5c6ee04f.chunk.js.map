{"version":3,"sources":["Entity/actions.ts","Entity/actionsAccepted.ts","Student/useStudent.tsx","Entity/entityReducer.ts","Entity/EntityRow.tsx","StudentExtended/actions.ts","Common/useHover.tsx","Entity/EntityList.tsx","Student/components/MyForm.tsx","Student/components/StudentForm.tsx","Student/StudentPage.tsx","StudentExtended/studentReducer.ts","StudentExtended/useStudent.tsx","StudentExtended/components/MyForm.tsx","Common/Select.tsx","StudentExtended/components/StudentGrades.tsx","StudentExtended/components/StudentForm.tsx","StudentExtended/StudentPage.tsx","App.tsx","index.tsx"],"names":["ActionTypes","createActionPayload","actionType","p","payload","type","createAction","StudentContext","EntityActions","close","CLOSE","cancel","CANCEL","setLoading","SET_LOADING","getAll","GET_ALL","get","GET","add","ADD","display","DISPLAY","edit","EDIT","store","STORE","remove","REMOVE","goToPage","GO_TO_PAGE","entityReducer","initialEntity","state","action","entities","pageSize","pageCount","Math","ceil","length","loading","entityId","entity","find","e","formMode","max","map","undefined","saveStorage","JSON","stringify","filter","a","currentPage","initialStudent","name","url","code","email","avatar","types","initialState","canEdit","something","StudentProvider","children","useReducer","dispatch","createContext","Provider","value","useStudent","useContext","StudentActionTypes","EntityRow","props","renderColumns","useState","isHovered","hoverProps","setValue","divRef","useRef","handleMouseOver","handleMouseOut","useEffect","node","current","addEventListener","removeEventListener","useHover","hoverRef","className","ref","key","href","onClick","preventDefault","title","icon","faEdit","color","faWindowClose","EntityList","pageRangeDisplayed","marginPagesDisplayed","style","border","id","previousLabel","nextLabel","breakLabel","onPageChange","selectedItem","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","MyForm","formik","useFormik","enableReinitialize","initialValues","fromMode","validationSchema","Yup","required","onSubmit","values","saveForm","handleSubmit","htmlFor","onChange","handleChange","onBlur","handleBlur","disabled","width","touched","errors","StudentForm","borderRadius","padding","marginTop","float","size","student","Page","currentData","setCurrentData","jsonStudents","query","offset","slice","minWidth","join","src","height","alt","StudentPage","s","parse","studentReducer","StudentActions","assignGrade","STUDENT_ASSIGN_GRADE","removeGrade","STUDENT_REMOVE_GRADE","grades","Reducer","studentId","gradeId","g","gradesAll","grade","prevState","jsonGrades","words","split","Select","selectedIndex","currentTarget","selectedOption","options","option","label","StudentGrades","already","gradesUnassigned","includes","stopPropagation","currData","sg","studentJoinGrades","fontSize","StudentPageExtended","App","to","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c6ee04f.chunk.js","sourcesContent":["import { IEntity } from \"./types\";\r\nimport { createAction, createActionPayload, ActionsUnion } from \"./actionsAccepted\";\r\n\r\nexport enum ActionTypes {\r\n\tGET_ALL = 'GET_ALL',\r\n\tSET_LOADING = 'SET_LOADING',\r\n\tADD = 'ADD',\r\n\tGET = 'GET',\r\n\tDISPLAY = 'DISPLAY',\r\n\tCLOSE = 'CLOSE',\r\n\tEDIT = 'EDIT',\r\n\tREMOVE = 'REMOVE',\r\n  \tSTORE = 'STORE',\r\n\tCANCEL = 'CANCEL',\r\n\tGO_TO_PAGE = 'GO_TO_PAGE'\r\n}\r\n\r\n/*\r\nexport type IEntityActions<T extends IEntity> = {\r\n\r\n\tclose: () => ActionsWithoutPayload<ActionTypes.CLOSE>;\r\n\t \r\n\tcancel: () => ActionsWithoutPayload<ActionTypes.CANCEL>;\r\n\r\n\tsetLoading: (b: boolean) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.SET_LOADING, boolean>;\r\n\r\n\tgetAll: (payload: {entities: T[]; pageSize: number; }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.GET_ALL, {entities: T[]; pageSize: number; }>;\r\n\r\n\tget: (payload:  { entities: T[]; entityId: number }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.GET, { entities: T[]; entityId: number }>;\r\n\r\n\tadd: (payload: { entities: T[] }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.ADD, { entities: T[] }>;\r\n\r\n\tdisplay: (payload: { entities: T[]; entityId: number }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.DISPLAY, { entities: T[]; entityId: number }>;\r\n\r\n\tedit: (payload: { entities: T[]; entityId: number }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.EDIT, { entities: T[]; entityId: number }>;\r\n\r\n\tstore: (payload: { saveStorage: (s: string) => void, entity: T }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.STORE, { saveStorage: (s: string) => void, entity: IEntity }>;\r\n\r\n\tremove: (payload: { saveStorage: (s: string) => void, entityId: number }) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.REMOVE, { saveStorage: (s: string) => void, entityId: number }>;\r\n\t\t\t\t\r\n\tgoToPage: (payload: number) => \r\n\t\t\t\tActionsWithPayload<typeof ActionTypes.GO_TO_PAGE, number>;\r\n };\r\n */\r\n\r\n\r\n /*\r\n createActionPayload<ActionTypes.GET_ALL, {\r\n\tentities: IEntity[];\r\n\tpageSize: number;\r\n}>(actionType: ActionTypes.GET_ALL): (payload: {\r\n\tentities: IEntity[];\r\n\tpageSize: number;\r\n}) => ActionsWithPayload<ActionTypes.GET_ALL, {\r\n\t...;\r\n}>\r\n*/\r\n\r\nexport const EntityActions = {  // : IEntityActions<IEntity>\r\n\tclose: createAction<typeof ActionTypes.CLOSE>(ActionTypes.CLOSE),\r\n\tcancel: createAction<typeof ActionTypes.CANCEL>(ActionTypes.CANCEL),\r\n\tsetLoading: createActionPayload<typeof ActionTypes.SET_LOADING, boolean>(ActionTypes.SET_LOADING),\r\n\tgetAll: createActionPayload<typeof ActionTypes.GET_ALL, { entities: IEntity[]; pageSize: number; }>(ActionTypes.GET_ALL),\r\n\tget: createActionPayload<typeof ActionTypes.GET, number>(ActionTypes.GET),\r\n\tadd: createActionPayload<typeof ActionTypes.ADD, { entities: IEntity[] }>(ActionTypes.ADD),\r\n\tdisplay: createActionPayload<typeof ActionTypes.DISPLAY, number>(ActionTypes.DISPLAY),\r\n\tedit: createActionPayload<typeof ActionTypes.EDIT, number>(ActionTypes.EDIT),\r\n\tstore: createActionPayload<typeof ActionTypes.STORE, { saveStorage: (s: string) => void, entity: IEntity }>(ActionTypes.STORE),\r\n\tremove: createActionPayload<typeof ActionTypes.REMOVE, { saveStorage: (s: string) => void, entityId: number }>(ActionTypes.REMOVE),\r\n\tgoToPage: createActionPayload<typeof ActionTypes.GO_TO_PAGE, number>(ActionTypes.GO_TO_PAGE),\r\n };\r\n\r\n export type AcceptedActions = ActionsUnion<typeof EntityActions>;\r\n","/**\n * Create an action that has a strongly typed string literal name with a strongly typed payload\n */\nexport function createActionPayload<TypeAction, TypePayload>(\n  actionType: TypeAction\n): (payload: TypePayload) => ActionsWithPayload<TypeAction, TypePayload> {\n  return (p: TypePayload): ActionsWithPayload<TypeAction, TypePayload> => {\n    return {\n      payload: p,\n      type: actionType\n    };\n  };\n}\n\n/**\n * Create an action with no payload\n */\nexport function createAction<TypeAction>(\n  actionType: TypeAction\n): () => ActionsWithoutPayload<TypeAction> {\n  return (): ActionsWithoutPayload<TypeAction> => {\n    return {\n      type: actionType\n    };\n  };\n}\n/**\n * Create an action with a payload\n */\nexport interface ActionsWithPayload<TypeAction, TypePayload> {\n  type: TypeAction;\n  payload: TypePayload;\n}\n\n/**\n * Create an action that does not have a payload\n */\nexport interface ActionsWithoutPayload<TypeAction> {\n  type: TypeAction;\n}\n\n/**\n * A very general type that means to be \"an object with a many field created with createActionPayload and createAction\n */\nexport interface ActionCreatorsMapObject {\n  [key: string]: (\n    ...args: any[]\n  ) => ActionsWithPayload<any, any> | ActionsWithoutPayload<any>;\n}\n\n/**\n * Use this Type to merge several action object that has field created with createActionPayload or createAction\n * E.g. type ReducerWithActionFromTwoObjects = ActionsUnion<typeof ActionsObject1 & typeof ActionsObject2>;\n */\nexport type ActionsUnion<A extends ActionCreatorsMapObject> = ReturnType<\n  A[keyof A]\n>;\n","\r\nimport React, { createContext, useContext, useReducer, Dispatch } from 'react';\r\nimport { IStudentState } from './types';\r\nimport { entityReducer } from '../Entity/entityReducer';\r\nimport { IStudent } from './types';\r\nimport { AcceptedActions } from '../Entity/actions';\r\n\r\n\r\nexport const initialStudent: IStudent = { \r\n\tentityId: 0, \r\n\tname: '',\r\n\turl: '',\r\n\tcode: '',\r\n\temail: '',\r\n\tavatar: 'https://img.pokemondb.net/artwork/diglett.jpg',\r\n\ttypes: []\r\n};\r\n\r\n\r\nconst initialState: IStudentState = { \r\n\tentities: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcanEdit: true,\r\n\tpageCount: 0,\r\n\tcurrentPage: 0,\r\n\tsomething: [1, 2, 3]\r\n};\r\n\r\nexport interface IStudentContext {\r\n\tstate: IStudentState;\r\n\tdispatch: Dispatch<AcceptedActions>;\r\n}\r\n\r\nlet StudentContext: React.Context<IStudentContext>;\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport const StudentProvider: React.FC<IProps> = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(entityReducer<IStudentState, IStudent>(initialStudent), initialState)\r\n\r\n\tif (StudentContext === undefined)\r\n  \t\tStudentContext = createContext<IStudentContext>({ state, dispatch })\r\n\r\n  \treturn (\r\n   \t<StudentContext.Provider value={{ state, dispatch }}>\r\n   \t\t{children}\r\n   \t</StudentContext.Provider>\r\n  \t)\r\n}\r\n\r\nexport const useStudent = () => useContext(StudentContext);","\r\nimport { IEntityState, IEntity } from './types';\r\nimport { ActionTypes, AcceptedActions } from './actions';\r\n\r\nexport const entityReducer: <\r\n\tTS extends IEntityState<IEntity>,\r\n\tT extends IEntity\r\n>(initialEntity: T) => React.Reducer<TS, AcceptedActions> = (initialEntity) => {\r\n\treturn (state, action) =>  {\r\n\t\tswitch(action.type) {\r\n\r\n\t\t\tcase ActionTypes.GET_ALL: {\r\n\t\t\t\tconst { entities, pageSize } = action.payload;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities: entities,\r\n\t\t\t\t\tpageCount: Math.ceil(entities.length / pageSize)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcase ActionTypes.SET_LOADING:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tloading: action.payload\r\n\t\t\t\t}\r\n\t\r\n\t\t\tcase ActionTypes.GET: {\r\n\t\t\t\tconst entityId = action.payload;\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentity: state.entities.find(e => e.entityId === entityId)!\r\n\t\t\t\t};\r\n\t\t\t}    \r\n\r\n\t\t\tcase ActionTypes.ADD: {\r\n\t\t\t\tconst { entities } = action.payload\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'add',\r\n\t\t\t\t\tentity: { \r\n\t\t\t\t\t\t...initialEntity, \r\n\t\t\t\t\t\tentityId: entities.length === 0 ? 1 : Math.max(...entities.map(e => e.entityId)) + 1\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}    \t\r\n\t\r\n\t\t\tcase ActionTypes.DISPLAY: {\r\n\t\t\t\tconst entityId = action.payload\r\n\t\t\t\tconst entity = state.entities.find(e => e.entityId === entityId)!\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'display',\r\n\t\t\t\t\tentity: { ...entity },\t\t\t\r\n\t\t\t\t\t// entity: { ...state.entity, ...{entity } }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tcase ActionTypes.EDIT: {\r\n\t\t\t\tconst entityId = action.payload\r\n\t\t\t\tconst entity = state.entities.find(e => e.entityId === entityId)!\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tentity: { ...entity }\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcase ActionTypes.CLOSE: \r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'none',\r\n\t\t\t\t\tentity: undefined\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\tcase ActionTypes.REMOVE: {\r\n\t\t\t\tconst { saveStorage, entityId } = action.payload\r\n\t\t\t\tsaveStorage(JSON.stringify(state.entities.filter(e => e.entityId !== entityId)))\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'display',\r\n\t\t\t\t\tentity: undefined,\r\n\t\t\t\t\tentities: state.entities.filter(e => e.entityId !== entityId)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcase ActionTypes.STORE: {\r\n\t\t\t\tconst { saveStorage, entity } = action.payload\r\n\t\t\t\tlet entities: IEntity[] = [];\r\n\t\t\t\tif (state.formMode === 'add') {\r\n\t\t\t\t\tentities = [...state.entities, { ...entity }]\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tentities = state.entities.map(a => a.entityId === entity.entityId ? { ...entity } : a)\r\n\t\t\t\t}\r\n\t\t\t\tsaveStorage(JSON.stringify(entities))\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'edit',\r\n\t\t\t\t\tentity: { ...entity },\r\n\t\t\t\t\tentities: entities\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\r\n\t\t\tcase ActionTypes.CANCEL: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tformMode: 'display',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tcase ActionTypes.GO_TO_PAGE: {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentPage: action.payload\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tdefault:\r\n\t\t\t\t// throw new Error(`Unhandled action type: ${action!.type}`);\r\n\t\t\t\t// when combine reducers \r\n\t\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { useHover } from \"../Common/useHover\";\r\nimport { IEntity } from \"./types\";\r\n\r\ninterface IRowProps<T> {\r\n\tentity: T,\r\n\trenderColumns: (item: T) => JSX.Element[],\r\n\tdisplay: (entityId: number) => void,\r\n\tedit: (entityId: number) => void,\r\n\tremove: (entityId: number) => void,\r\n}\r\n\r\nexport const EntityRow: <T extends IEntity> \r\n\t\t\t\t\t(props: IRowProps<T>) => React.ReactElement<IRowProps<T>> = (props) => {\r\n\tconst { entity, renderColumns, display, edit, remove } = props;\r\n\tconst { entityId, name } = entity; // , url \r\n\tconst [hoverRef, hoverProps] = useHover();\r\n\r\n\treturn (\r\n\t\t<ul className=\"entity-columns\" ref={hoverRef}>\r\n\t\t\t{/* <li>{entityId}</li> */}\r\n\t\t\t<li key={entityId}>\r\n\t\t\t\t<a href=\"#/\" onClick={(e) => { e.preventDefault(); display(entityId)  }}>  {/* dispatch(EntityActions.display(entityId)) */}\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\r\n\t\t\t{ renderColumns(entity) }\r\n\r\n\t\t\t<li key=\"buttons\">\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-edit\" title=\"Edit\" onClick={() => edit(entityId)}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t{hoverProps.isHovered &&\r\n\t\t\t\t<button className=\"button-remove\" title=\"Remove\" onClick={() => { remove(entityId) }}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t)\r\n};\r\n","import { IStudent, IStudentGradeIds } from \"./types\";\r\nimport { ActionsUnion, createActionPayload } from \"../Entity/actionsAccepted\";\r\n\r\nexport enum StudentActionTypes {\r\n\tGET_ALL = 'GET_ALL',\r\n\tSTUDENT_ASSIGN_GRADE = 'STUDENT_ASSIGN_GRADE',\r\n\tSTUDENT_REMOVE_GRADE = 'STUDENT_REMOVE_GRADE'\r\n}\r\n  \r\nexport const StudentActions = {\r\n\tgetAll: createActionPayload<typeof StudentActionTypes.GET_ALL, { entities: IStudent[]; pageSize: number; }>\r\n\t\t(StudentActionTypes.GET_ALL),\r\n\r\n\tassignGrade: createActionPayload<typeof StudentActionTypes.STUDENT_ASSIGN_GRADE, IStudentGradeIds>\r\n\t\t(StudentActionTypes.STUDENT_ASSIGN_GRADE),\r\n\t\t\r\n\tremoveGrade: createActionPayload<typeof StudentActionTypes.STUDENT_REMOVE_GRADE, IStudentGradeIds>\r\n\t\t(StudentActionTypes.STUDENT_REMOVE_GRADE),\r\n };\r\n\r\nexport type StudentAcceptedActions = ActionsUnion<typeof StudentActions>;\r\n\r\n\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\ninterface IHoverProps {\r\n\tisHovered: boolean;\r\n}\r\n\r\n// Hook\r\nexport function useHover() : [React.RefObject<HTMLUListElement>, IHoverProps] {\r\n\tconst [hoverProps, setValue] = useState({ isHovered: false });\r\n \r\n\tconst divRef = useRef<HTMLUListElement>(null);\r\n \r\n\tconst handleMouseOver = () => setValue({ isHovered: true });\r\n\tconst handleMouseOut = () => setValue({ isHovered: false });\r\n \r\n\tuseEffect(\r\n\t  () => {\r\n\t\t const node = divRef.current;\r\n\t\t if (node) {\r\n\t\t\tnode.addEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\tnode.addEventListener('mouseleave', () => handleMouseOut());\r\n \r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener('mouseenter', () => handleMouseOver());\r\n\t\t\t\tnode.removeEventListener('mouseleave', () => handleMouseOut());\r\n\t\t\t};\r\n\t\t }\r\n\t  }, [divRef.current] // Recall only if ref changes\r\n\t);\r\n \r\n\treturn [divRef, hoverProps];\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport { EntityActions } from \"./actions\";\r\nimport { EntityRow } from \"./EntityRow\";\r\nimport { IEntity } from \"./types\";\r\n\r\n\r\ninterface IProps<T extends IEntity> {\r\n\tentities: T[],\r\n\tdispatch: React.Dispatch<any>,\r\n\trenderColumns: (item: T) => JSX.Element[],\r\n\tsaveStorage: (s: string) => void,\r\n\tcurrentPage: number,\r\n\tpageCount: number,\r\n\tpageRangeDisplayed: number;\r\n\tmarginPagesDisplayed: number;\r\n}\r\n\r\nexport const EntityList: <T extends IEntity>\r\n\t\t\t\t\t(props: IProps<T>) => React.ReactElement<IProps<T>> = (props) => {\r\n\tconst { \r\n\t\tentities, dispatch, renderColumns, saveStorage,\r\n\t\tpageCount, pageRangeDisplayed, marginPagesDisplayed, \r\n\t} = props;\r\n\t\r\n\tconst display = (entityId: number) => dispatch(EntityActions.display(entityId));\r\n\tconst edit = (entityId: number) => dispatch(EntityActions.edit(entityId));\r\n\tconst remove = (entityId: number) => dispatch(EntityActions.remove({saveStorage, entityId}));\r\n\r\n\treturn (\r\n   \t<div style={{border: '1px solid lightblue'}} id=\"react-paginate\">\r\n\t\t\t<ul className=\"entity-list\">\r\n\t\t\t\t{entities.map(entity => (\r\n\t\t\t\t\t<li key={entity.entityId}>\r\n\t\t\t\t\t\t<EntityRow\r\n\t\t\t\t\t\t\tentity={entity}\r\n\t\t\t\t\t\t\trenderColumns={renderColumns}\r\n\t\t\t\t\t\t\tdisplay={display}\r\n\t\t\t\t\t\t\tedit={edit}\r\n\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\t\t\r\n\t\t\t<ReactPaginate\r\n\t\t\t\tpreviousLabel={\"← Previous\"}\r\n\t\t\t\tnextLabel={\"Next →\"}\r\n\t\t\t\tbreakLabel={<span className=\"gap\">...</span>}\r\n\t\t\t\tpageCount={pageCount}\r\n\t\t\t\tonPageChange={(selectedItem: { selected: number }) => dispatch(EntityActions.goToPage(selectedItem.selected))}\r\n\t\t\t\t// forcePage={currentPage}\r\n\t\t\t\tcontainerClassName={\"pagination\"}\r\n\t\t\t\tpreviousLinkClassName={\"previous_page\"}\r\n\t\t\t\tnextLinkClassName={\"next_page\"}\r\n\t\t\t\tdisabledClassName={\"disabled\"}\r\n\t\t\t\tactiveClassName={\"active\"}\r\n\t\t\t\tpageRangeDisplayed={pageRangeDisplayed}\r\n\t\t\t\tmarginPagesDisplayed={marginPagesDisplayed}\r\n\t\t\t/>\r\n\t\t\t<button onClick={() => dispatch(EntityActions.add({ entities: entities }))}>Add new</button>\t\t\t\r\n\t\t</div>\r\n  )\r\n}","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IStudent } from '../types';\r\n\r\ninterface IFormProps {\r\n\tentity: IStudent;\r\n\tformMode: string;\r\n\tcanEdit: boolean;\r\n\tcancel: () => void;\r\n\tsaveForm: (student: IStudent) => void;\r\n\tedit: () => void;\r\n\tremove: () => void;\t\r\n }\r\n\r\nexport const MyForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n\tenableReinitialize: true,\r\n   initialValues: {\r\n\t\tfromMode: props.formMode,\r\n\t\tcanEdit: props.canEdit,\r\n      entityId: props.entity.entityId,\r\n\t\turl: props.entity.url,\r\n\t\tcode: props.entity.code,\r\n\t\tavatar: props.entity.avatar,\r\n\t\tname: props.entity.name,\r\n\t\temail: props.entity.email,\r\n\t\ttypes: props.entity.types,\r\n   },\r\n   validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n   }),\r\n   onSubmit: (values) => {\r\n\t\t// values.name = values.firstName.trim() + ' ' + values.lastName.trim()\r\n\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\tprops.saveForm(values)\r\n   },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n\t\t { props.formMode !== 'add' && \r\n\t\t <>\r\n\t\t\t<label htmlFor=\"entityId\">Student id</label>\r\n\t\t\t<input\r\n\t\t\tid=\"entityId\"\r\n\t\t\tname=\"entityId\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tonChange={formik.handleChange}\r\n\t\t\tonBlur={formik.handleBlur}\r\n\t\t\tvalue={formik.values.entityId}\r\n\t\t\tdisabled\r\n\t\t\tstyle={{width: '50px'}}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.entityId && formik.errors.entityId ? (\r\n\t\t\t<div>{formik.errors.entityId}</div>\r\n\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t<label htmlFor=\"name\">Name</label>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.name}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.name && formik.errors.name ? (\r\n        <div>{formik.errors.name}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"code\">Code</label>\r\n      <input\r\n        id=\"code\"\r\n        name=\"code\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.code}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.code && formik.errors.code ? (\r\n        <div>{formik.errors.code}</div>\r\n      ) : null}\r\n\r\n\t\t<label htmlFor=\"lastName\">Avatar</label>\r\n      <input\r\n        id=\"avtar\"\r\n        name=\"avtar\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.avatar}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.avatar && formik.errors.avatar ? (\r\n        <div>{formik.errors.avatar}</div>\r\n      ) : null}\t\t\r\n\r\n\t\t<label htmlFor=\"email\">Email</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.email}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null}\t\t\r\n\r\n\r\n\t\t{ props.formMode !== 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n      \t<button type=\"submit\">Save</button>\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t{ props.canEdit && props.formMode === 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.edit()}>Edit</button>\r\n\t\t\t<button onClick={() => props.remove()}>Remove</button>\r\n\t\t\t</>\r\n\t\t}\t\t\t\t\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { useStudent } from '../useStudent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { EntityActions} from '../../Entity/actions'\r\nimport { MyForm } from './MyForm';\r\n\r\ninterface IProps {\r\n\tsaveStorage: (s: string) => void,\r\n}\r\n\r\nexport const StudentForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst { state, dispatch } = useStudent();\r\n\tconst { entities, entity, formMode, canEdit } = state;\r\n\r\n\tconst { saveStorage } = props;\r\n\r\n\tlet title: string = ''\r\n\tswitch (state.formMode) {\r\n\t\tcase 'display':\r\n\t\t\ttitle = 'Student';\r\n\t\t\tbreak;\r\n\t\tcase 'edit':\r\n\t\t\ttitle = 'Edit Student';\r\n\t\t\tbreak;\r\n\t\tcase 'add':\r\n\t\t\ttitle = 'New Student';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t{ entity && \r\n\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '10px'}}>\r\n\t\t\t\t<h4 style={{marginTop: 0}}>{title}</h4>\r\n\t\t\t\t<button \r\n\t\t\t\t\tstyle={{float:'right'}}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Close\"\r\n\t\t\t\t\tonClick={() => { dispatch(EntityActions.close())}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} size=\"2x\" color='lightblue' />\r\n\t\t\t\t</button>\t\t\t\t\r\n\t\t\t\t<MyForm {...props}\r\n\t\t\t\t\tentity={entity!} \r\n\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\tcanEdit={canEdit}\r\n\t\t\t\t\tcancel = {() => dispatch(EntityActions.cancel())}\r\n\t\t\t\t\tsaveForm = { (student) => dispatch(EntityActions.store({ saveStorage, entity: student }))}\r\n\t\t\t\t\tedit = {() => dispatch(EntityActions.edit(entity!.entityId))}\r\n\t\t\t\t\tremove = {() => dispatch(EntityActions.remove({ saveStorage, entityId: entity!.entityId }))}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport jsonStudents from \"./Students.json\"\r\n\r\nimport { StudentProvider, useStudent } from \"./useStudent\";\r\n\r\nimport { EntityList } from \"../Entity/EntityList\";\r\nimport { StudentForm } from \"./components/StudentForm\";\r\n\r\nimport { IStudent } from \"./types\";\r\nimport { IEntity } from \"../Entity/types\";\r\nimport { EntityActions } from \"../Entity/actions\";\r\n\r\ninterface IPageProps {\r\n\tquery: string;\r\n}\r\n\r\nexport const Page: React.FC<IPageProps> = (props: IProps) => {\r\n\tconst { state, dispatch } = useStudent();\r\n\tconst { entities, currentPage, pageCount } = state;\r\n\r\n\tconst [currentData, setCurrentData] = useState<IStudent[]>([]);\r\n\tconst pageSize = 9;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(EntityActions.setLoading(true))\r\n\t\t// let allStudents: IStudent[] = [...jsonStudents]\r\n\t\tlocalStorageStudents = [...jsonStudents]\r\n\t\tconst entities : IEntity[] = localStorageStudents\r\n\t\tdispatch(EntityActions.getAll({ entities, pageSize}))\r\n\t\tdispatch(EntityActions.setLoading(false))\r\n\t}, [dispatch, props.query]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst offset = currentPage * pageSize\r\n\t\tsetCurrentData(entities.slice(offset, offset + pageSize));\r\n\t }, [entities, currentPage]);\r\n\r\n\r\n  \treturn (\r\n\t\t<div className=\"two-columns\">\r\n\t\t\t<div className=\"a\">\r\n\t\t\t\t<h3>Students</h3>\r\n\t\t\t\t<EntityList \r\n\t\t\t\t\tentities={currentData}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t\tsaveStorage={saveStorage}\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\tmarginPagesDisplayed={2}\r\n\t\t\t\t\tpageRangeDisplayed={5}\r\n\t\t\t\t\trenderColumns = {(entity: IStudent) => [\r\n\t\t\t\t\t\t<li key=\"types\" style={{minWidth: '60%'}}>{entity.types.join(', ')}</li>,\r\n\t\t\t\t\t\t<li key=\"img\"><img src={entity.avatar} style={{height: '30px'}} alt=\"Slika\"></img></li>\r\n\t\t\t\t\t]}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"b\">\r\n\t\t\t\t<StudentForm saveStorage={saveStorage} />\r\n\t\t\t</div>\r\n\t\t</div>    \t\t\r\n  );\r\n}\r\n\r\n\r\ninterface IProps {\r\n\tquery: string\r\n}\r\n\r\nexport const StudentPage: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <StudentProvider>\r\n\t\t <Page query={props.query} />\r\n    </StudentProvider>\r\n  );\r\n}\r\n\r\nlet localStorageStudents: IStudent[] = []\r\n\r\nexport const saveStorage = (s: string) => {\r\n\tlocalStorageStudents = JSON.parse(s)\r\n}\r\n","import { AcceptedActions } from '../Entity/actions';\r\nimport { IStudentState, IStudent } from \"./types\";\r\nimport { entityReducer } from \"../Entity/entityReducer\";\r\nimport { StudentActionTypes, StudentAcceptedActions } from \"./actions\";\r\nimport { saveStorage } from './StudentPage';\r\n\r\nexport const initialStudent: IStudent = { \r\n\tentityId: 0, \r\n\tname: '',\r\n\turl: '',\r\n\tcode: '',\r\n\temail: '',\r\n\tavatar: 'https://img.pokemondb.net/artwork/diglett.jpg',\r\n\ttypes: [],\r\n\tgrades: []\r\n};\r\n\r\nexport const combineReducers: (\r\n\t\tentityReducer: React.Reducer<IStudentState, AcceptedActions>, \r\n\t\tstudentReducer: React.Reducer<IStudentState, StudentAcceptedActions>) => \r\n\t\t\t\t\tReact.Reducer<IStudentState, AcceptedActions & StudentAcceptedActions> = (entityReducer, studentReducer) => {\r\n\treturn (prevState, action) => {\r\n\t\t\r\n\t\t// when overriden in Student, no need to call entityReducer\r\n\t\tif (action.type in StudentActionTypes)\r\n\t\t\treturn studentReducer(prevState, action)\r\n\r\n\t\tconst state = entityReducer(prevState, action);\r\n\t\treturn studentReducer(state, action)\r\n\t };\t\r\n}\r\n\r\n\r\nexport const studentReducer: (initialEntity: IStudent) => \r\n\t\t\t\t\tReact.Reducer<IStudentState, StudentAcceptedActions> = (initialEntity) => {\r\n\treturn (state, action) =>  {\r\n\t\tswitch(action.type) {\r\n\r\n\t\t\tcase StudentActionTypes.GET_ALL:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities: action.payload.entities,\r\n\t\t\t\t\tpageCount: Math.ceil(action.payload.entities.length / action.payload.pageSize)\r\n\t\t\t\t}\r\n\r\n\t\t\tcase StudentActionTypes.STUDENT_ASSIGN_GRADE: {\r\n\t\t\t\tconst { studentId, gradeId } = action.payload\r\n\t\t\t\tconst entities = state.entities.map(student => \r\n\t\t\t\t\tstudent.entityId !== studentId ?\r\n\t\t\t\t\t\t{...student} :\r\n\t\t\t\t\t\t{...student, grades: [...student.grades, { \r\n\t\t\t\t\t\t\t\tgradeId: student.grades.length===0 ? 1: Math.max(...student.grades.map(g=>g.gradeId))+1,\r\n\t\t\t\t\t\t\t\tname: state.gradesAll.find(g=>g.entityId === gradeId)!.name,\r\n\t\t\t\t\t\t\t\tgrade: 0\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tsaveStorage(JSON.stringify(entities))\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities,\r\n\t\t\t\t\tentity: { ...entities.find(e => e.entityId === studentId)! }\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcase StudentActionTypes.STUDENT_REMOVE_GRADE: {\r\n\t\t\t\tconst { studentId, gradeId } = action.payload\r\n\t\t\t\tconst entities = state.entities.map(student => \r\n\t\t\t\t\tstudent.entityId !== studentId ?\r\n\t\t\t\t\t\t{...student} :\r\n\t\t\t\t\t\t{...student, grades: student.grades.filter(grade=>grade.gradeId !== gradeId)}\r\n\t\t\t\t)\r\n\t\t\t\tsaveStorage(JSON.stringify(entities))\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tentities,\r\n\t\t\t\t\tentity: { ...entities.find(e => e.entityId === studentId)! }\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\tdefault:\r\n\t\t\t\t//\tthrow new Error(`Unhandled action type: ${action!.type}`);\r\n\t\t\t\t// when combine reducers \r\n\t\t\t\treturn state\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\nexport const Reducer = combineReducers(entityReducer(initialStudent), studentReducer(initialStudent));\r\n","\r\nimport React, { createContext, useContext, useReducer, Dispatch } from 'react';\r\nimport { IStudentState } from './types';\r\nimport { Reducer } from './studentReducer';\r\nimport jsonGrades from \"../Grades/Grades.json\"\r\nimport StudentGrades from './components/StudentGrades';\r\n\r\n\r\nconst initialState: IStudentState = { \r\n\tentities: [],\r\n\tloading: false,\r\n\tformMode: 'display',\r\n\tcanEdit: true,\r\n\tpageCount: 0,\r\n\tcurrentPage: 0,\r\n\tgradesAll: []\r\n};\r\n\r\nexport interface IStudentContext {\r\n\tstate: IStudentState;\r\n\tdispatch: Dispatch<any>; // AcceptedActions & StudentAcceptedActions>;\r\n}\r\n\r\nlet StudentContext: React.Context<IStudentContext>;\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport const StudentProvider: React.FC<IProps> = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(Reducer, initialState)\r\n\r\n\tif (StudentContext === undefined) {\r\n\t\tstate.gradesAll = jsonGrades.map(grade => { \r\n\t\t\treturn { ...grade, words: grade.name.split(',')} \r\n\t\t})\r\n\t\tStudentContext = createContext<IStudentContext>({ state, dispatch })\r\n\t}\r\n\r\n  \treturn (\r\n   \t<StudentContext.Provider value={{ state, dispatch }}>\r\n   \t\t{children}\r\n   \t</StudentContext.Provider>\r\n  \t)\r\n}\r\n\r\nexport const useStudent = () => useContext(StudentContext);","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { IStudent } from '../types';\r\n\r\ninterface IFormProps {\r\n\tentity: IStudent;\r\n\tformMode: string;\r\n\tcanEdit: boolean;\r\n\tcancel: () => void;\r\n\tsaveForm: (student: IStudent) => void;\r\n\tedit: () => void;\r\n\tremove: () => void;\t\r\n }\r\n\r\nexport const MyForm: React.FC<IFormProps> = (props: IFormProps) => {\r\n  const formik = useFormik({\r\n\tenableReinitialize: true,\r\n   initialValues: {\r\n\t\tfromMode: props.formMode,\r\n\t\tcanEdit: props.canEdit,\r\n      entityId: props.entity.entityId,\r\n\t\turl: props.entity.url,\r\n\t\tcode: props.entity.code,\r\n\t\tavatar: props.entity.avatar,\r\n\t\tname: props.entity.name,\r\n\t\temail: props.entity.email,\r\n\t\ttypes: props.entity.types,\r\n\t\tgrades: props.entity.grades\r\n   },\r\n   validationSchema: Yup.object({\r\n      code: Yup.string()\r\n        .max(150, 'Must be 150 characters or less')\r\n        .required('Required'),\r\n   }),\r\n   onSubmit: (values) => {\r\n\t\t// values.name = values.firstName.trim() + ' ' + values.lastName.trim()\r\n\t\t// alert(JSON.stringify(values, null, 2));\r\n\t\tprops.saveForm(values)\r\n   },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n\t\t { props.formMode !== 'add' && \r\n\t\t <>\r\n\t\t\t<label htmlFor=\"entityId\">Student id</label>\r\n\t\t\t<input\r\n\t\t\tid=\"entityId\"\r\n\t\t\tname=\"entityId\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tonChange={formik.handleChange}\r\n\t\t\tonBlur={formik.handleBlur}\r\n\t\t\tvalue={formik.values.entityId}\r\n\t\t\tdisabled\r\n\t\t\tstyle={{width: '50px'}}\r\n\t\t\t/>\r\n\t\t\t{formik.touched.entityId && formik.errors.entityId ? (\r\n\t\t\t<div>{formik.errors.entityId}</div>\r\n\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t<label htmlFor=\"name\">Name</label>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.name}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.name && formik.errors.name ? (\r\n        <div>{formik.errors.name}</div>\r\n      ) : null}\r\n\r\n      <label htmlFor=\"code\">Code</label>\r\n      <input\r\n        id=\"code\"\r\n        name=\"code\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.code}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.code && formik.errors.code ? (\r\n        <div>{formik.errors.code}</div>\r\n      ) : null}\r\n\r\n\t\t<label htmlFor=\"lastName\">Avatar</label>\r\n      <input\r\n        id=\"avtar\"\r\n        name=\"avtar\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.avatar}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.avatar && formik.errors.avatar ? (\r\n        <div>{formik.errors.avatar}</div>\r\n      ) : null}\t\t\r\n\r\n\t\t<label htmlFor=\"email\">Email</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n\t\t  value={formik.values.email}\r\n\t\t  disabled = {props.formMode === 'display'}\r\n      />\r\n      {formik.touched.email && formik.errors.email ? (\r\n        <div>{formik.errors.email}</div>\r\n      ) : null}\t\t\r\n\r\n\r\n\t\t{ props.formMode !== 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.cancel()}>Cancel</button>\r\n      \t<button type=\"submit\">Save</button>\r\n\t\t\t</>\r\n\t\t}\r\n\r\n\t\t{ props.canEdit && props.formMode === 'display' &&\r\n\t\t\t<>\r\n\t\t\t<button onClick={() => props.edit()}>Edit</button>\r\n\t\t\t<button onClick={() => props.remove()}>Remove</button>\r\n\t\t\t</>\r\n\t\t}\t\t\t\t\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\n \r\ntype OptionValue = string | number;\r\n\r\ntype Option<T extends OptionValue> = {\r\n  value: T;\r\n  label: string;\r\n};\r\n\r\ntype Props<T extends OptionValue> = {\r\n  options: Option<T>[];\r\n  value: T;\r\n  onChange: (value: T) => void;\r\n};\r\n\r\nexport function Select<T extends OptionValue>(props: Props<T>) {\r\n  function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\r\n    const { selectedIndex } = e.currentTarget;\r\n    const selectedOption = props.options[selectedIndex];\r\n    props.onChange(selectedOption.value);\r\n  }\r\n  return (\r\n    <select value={props.value} onChange={handleOnChange}>\r\n\t\t <option value=\"0\">select</option>\r\n      {props.options.map(option => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { AutoSuggestGrade } from './AutoSuggestGrade';\r\nimport { useStudent } from '../useStudent';\r\nimport { StudentActions } from '../actions';\r\nimport { Select } from '../../Common/Select';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst StudentGrades: React.FC<IProps> = (props: IProps) => {\r\n\tconst { state, dispatch } = useStudent();\r\n\tconst { entity: student, formMode, canEdit, gradesAll } = state;\r\n\tconst { grades } = student!;\r\n\r\n\tconst already = student!.grades.map(g => g.gradeId);\r\n\tconst gradesUnassigned = gradesAll.filter(grade => !already.includes(grade.entityId))\r\n   return (\r\n      <div className=\"name-container\">\r\n\t\t\t{ grades.length === 0 && \r\n\t\t\t\t<div>\r\n\t\t\t\t\tNo grades yet\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t<>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t<th>Grade</th>\r\n\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' && <th></th> }\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{ grades.length > 0 && grades.map(grade => \r\n\t\t\t\t\t\t\t<tr key={grade.gradeId}>\r\n\t\t\t\t\t\t\t\t<td className=\"name\">\r\n\t\t\t\t\t\t\t\t\t{grade.name}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td className=\"name\">\r\n\t\t\t\t\t\t\t\t\t{grade.gradeId}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t{ canEdit && formMode !== 'display' &&\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"button-remove\" title=\"Remove Grade\" \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\t\t\tdispatch(StudentActions.removeGrade({studentId: student!.entityId, gradeId: grade.gradeId}))\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose}  color='lightblue' />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{canEdit && formMode !== 'display' && \r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\toptions={gradesUnassigned.map(grade => { return { value: grade.entityId, label: grade.name } })}\r\n\t\t\t\t\t\t\t\t\t\tvalue={0}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(gradeId: number) => \r\n\t\t\t\t\t\t\t\t\t\t\tdispatch(StudentActions.assignGrade({\r\n\t\t\t\t\t\t\t\t\t\t\t\tstudentId: student!.entityId,\r\n\t\t\t\t\t\t\t\t\t\t\t\tgradeId: gradeId,\r\n\t\t\t\t\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t</tr>}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      </div>\r\n   );\r\n  }\r\n\r\nexport default StudentGrades\r\n\r\n","import React from 'react';\r\nimport { useStudent } from '../useStudent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { EntityActions} from '../../Entity/actions'\r\nimport { MyForm } from './MyForm';\r\nimport StudentGrades from './StudentGrades';\r\n\r\ninterface IProps {\r\n\tsaveStorage: (s: string) => void,\r\n\t// assignStudentGrade: (entityId: number, gradeId: number) => void; \t\r\n\t// removeStudentGrade: (entityId: number, gradeId: number) => void;\r\n}\r\n\r\nexport const StudentForm: React.FC<IProps> = (props: IProps) => {\r\n\tconst { state, dispatch } = useStudent();\r\n\tconst { entity, formMode, canEdit } = state;\r\n\r\n\tconst { saveStorage } = props;\r\n\r\n\tlet title: string = ''\r\n\tswitch (state.formMode) {\r\n\t\tcase 'display':\r\n\t\t\ttitle = 'Student';\r\n\t\t\tbreak;\r\n\t\tcase 'edit':\r\n\t\t\ttitle = 'Edit Student';\r\n\t\t\tbreak;\r\n\t\tcase 'add':\r\n\t\t\ttitle = 'New Student';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"formik-example formik-example--blue\">\r\n\t\t{ entity && \r\n\t\t\t<div style={{border: '1px solid silver', borderRadius: '5px', padding: '10px'}}>\r\n\t\t\t\t<h4 style={{marginTop: 0}}>{title}</h4>\r\n\t\t\t\t<button \r\n\t\t\t\t\tstyle={{float:'right'}}\r\n\t\t\t\t\tclassName=\"button-remove\"\r\n\t\t\t\t\ttitle=\"Close\"\r\n\t\t\t\t\tonClick={() => { dispatch(EntityActions.close())}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWindowClose} size=\"2x\" color='lightblue' />\r\n\t\t\t\t</button>\t\t\t\t\r\n\t\t\t\t<MyForm {...props}\r\n\t\t\t\t\tentity={entity!} \r\n\t\t\t\t\tformMode={formMode}\r\n\t\t\t\t\tcanEdit={canEdit}\r\n\t\t\t\t\tcancel = {() => dispatch(EntityActions.cancel())}\r\n\t\t\t\t\tsaveForm = { (student) => dispatch(EntityActions.store({ saveStorage, entity: student }))}\r\n\t\t\t\t\tedit = {() => dispatch(EntityActions.edit(entity!.entityId))}\r\n\t\t\t\t\tremove = {() => dispatch(EntityActions.remove({ saveStorage, entityId: entity!.entityId }))}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<StudentGrades\t/>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport jsonStudents from \"./Students.json\"\r\n\r\nimport { StudentProvider } from \"./useStudent\";\r\nimport { useStudent } from \"./useStudent\";\r\n\r\nimport { EntityList } from \"../Entity/EntityList\";\r\nimport { StudentForm } from \"./components/StudentForm\";\r\n\r\nimport { IStudent, IStudentGrade } from \"./types\";\r\nimport { EntityActions } from \"../Entity/actions\";\r\nimport { StudentActions } from \"./actions\";\r\nimport { IGrade } from \"../Grades/types\";\r\n\r\ninterface IPageProps {\r\n\tquery: string;\r\n}\r\n\r\nconst studentJoinGrades = (student: IStudent | undefined, gradesAll: IGrade[]) : IStudentGrade[]=> {\r\n\tif (student === undefined || student.grades.length === 0)\r\n\t\treturn [];\r\n\treturn student.grades.map(sg => { \r\n\t\treturn { ...sg, name: gradesAll.find(grade => grade.entityId === sg.gradeId)?.name }\r\n\t})\r\n}\r\n\r\nexport const Page: React.FC<IPageProps> = (props: IProps) => {\r\n\tconst { state, dispatch } = useStudent();\r\n\tconst { entities, currentPage, pageCount, gradesAll } = state;\r\n\r\n\tconst [currentData, setCurrentData] = useState<IStudent[]>([]);\r\n\tconst pageSize = 9;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(EntityActions.setLoading(true))\r\n\t\tlocalStorageStudents = [...jsonStudents]\r\n\t\tconst entities: IStudent[] = localStorageStudents\r\n\t\tdispatch(StudentActions.getAll({ entities, pageSize }))\r\n\t\tdispatch(EntityActions.setLoading(false))\r\n\t}, [dispatch, props.query]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst offset = currentPage * pageSize\r\n\t\tconst currData = entities.slice(offset, offset + pageSize);\r\n\t\tsetCurrentData(currData);\r\n\t\t// per page\r\n\t\tcurrData.map(student => student.grades = studentJoinGrades(student, gradesAll));\r\n\t}, [entities, currentPage, gradesAll]);\r\n\r\n\r\n\r\n  \treturn (\r\n\t\t<div className=\"two-columns\">\r\n\t\t\t<div className=\"a\">\r\n\t\t\t\t<h3>Students</h3>\r\n\t\t\t\t<EntityList \r\n\t\t\t\t\tentities={currentData}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t\tsaveStorage={saveStorage}\r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\tmarginPagesDisplayed={2}\r\n\t\t\t\t\tpageRangeDisplayed={5}\r\n\t\t\t\t\trenderColumns = {(entity: IStudent) => [\r\n\t\t\t\t\t\t<li key=\"types\" style={{minWidth: '60%'}}>{entity.types.join(', ')}</li>,\r\n\t\t\t\t\t\t<li key=\"img\"><img src={entity.avatar} style={{height: '30px'}} alt=\"Slika\"></img></li>,\r\n\t\t\t\t\t\t<li key=\"grades\" style={{fontSize: 'small'}}>\r\n\t\t\t\t\t\t\t{entity.grades.length > 0 &&\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\tGrades:&nbsp;\r\n\t\t\t\t\t\t\t\t\t{entity.grades.map(g => { return `${g.name}:${g.grade}`}).join(', ')}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</li>,\r\n\t\t\t\t\t]}\r\n\t\t\t\t />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"b\">\r\n\r\n\t\t\t\t{ state.formMode === 'display' ?\r\n\t\t\t\t\t<StudentForm saveStorage={saveStorage}\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<StudentForm saveStorage={saveStorage}\t/>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t</div>    \t\t\r\n  );\r\n}\r\n\r\n\r\ninterface IProps {\r\n\tquery: string\r\n}\r\n\r\nexport const StudentPageExtended: React.FC<IProps> = (props: IProps) => {\r\n  return (\r\n    <StudentProvider>\r\n\t\t <Page query={props.query} />\r\n    </StudentProvider>\r\n  );\r\n}\r\n\r\nlet localStorageStudents: IStudent[] = []\r\n\r\nexport const saveStorage = (s: string) => {\r\n\tlocalStorageStudents = JSON.parse(s)\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Link  } from 'react-router-dom'\nimport { StudentPage } from './Student/StudentPage';\nimport { StudentPageExtended } from './StudentExtended/StudentPage';\n\nconst App: React.FC = () => {\n  return (\n\t\t<Router>\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/xyz\">Documentation</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/student\">Student</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/\" className=\"push-right\">Student Extended</Link>  {/* student-extended */}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\t\t\t\t\n\t\t\t</nav>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/xyz\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>IStudent extends IEntity</li>\n\t\t\t\t\t\t\t<li>IStudentState extends IEntityState</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/student\">\n\t\t\t\t\t\t<StudentPage query=\"all\" />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">  {/* student-extended */}\n\t\t\t\t\t\t<StudentPageExtended query=\"all\" />\n\t\t\t\t\t</Route>\t\t\t\t\t\t\n\t\t\t\t</Switch>\n\t\t\t</div>\t\n\t\t</Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}